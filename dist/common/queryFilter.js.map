{"version":3,"file":"queryFilter.js","sourceRoot":"","sources":["../../src/common/queryFilter.ts"],"names":[],"mappings":"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","sourcesContent":["import { Query } from \"../type/Query\";\nimport { Component } from \"../type/Component\";\nimport { Entity } from \"../type/Entity\";\n\nexport const queryFilter =\n  <Components extends Component[]>(query: Query<Components>) =>\n  (entities: Entity<Components>[]): Entity<Components>[] => {\n    return entities.filter((entity) => matchesQuery(entity, query));\n  };\n\nfunction matchesQuery<Components extends Component[]>(\n  entity: Entity<Components>,\n  query: Query<Components>\n): boolean {\n  const { has, not, match, and, or } = query;\n\n  const get = (sel: string): any => {\n    const [ns, key] = sel.split(\".\");\n    return (entity as Record<string, Record<string, any>>)?.[ns]?.[key];\n  };\n\n  // First, short-circuit if `or` is present and satisfied\n  if (or && matchesQuery(entity, or)) return true;\n\n  if (has) {\n    const hasList = Array.isArray(has) ? has : [has];\n    if (!hasList.every((sel) => get(sel) !== undefined)) return false;\n  }\n\n  if (not) {\n    const notList = Array.isArray(not) ? not : [not];\n    if (notList.some((sel) => get(sel) !== undefined)) return false;\n  }\n\n  if (match) {\n    const value = get(match.key);\n    switch (match.op || \"==\") {\n      case \"==\":\n        if (value !== match.value) return false;\n        break;\n      case \"!=\":\n        if (value === match.value) return false;\n        break;\n      case \"!\":\n        if (value) return false;\n        break;\n      case \"contains\":\n        if (\n          value === undefined ||\n          (Array.isArray(value) && !value.includes(match.value))\n        )\n          return false;\n        break;\n      case \">\":\n        if (!(value > Number(match.value))) return false;\n        break;\n      case \"<\":\n        if (!(value < Number(match.value))) return false;\n        break;\n      case \">=\":\n        if (!(value >= Number(match.value))) return false;\n        break;\n      case \"<=\":\n        if (!(value <= Number(match.value))) return false;\n        break;\n      case \"r\":\n        if (\n          !(\n            typeof value === \"string\" &&\n            new RegExp(String(match.value)).test(value)\n          )\n        )\n          return false;\n        break;\n      case \"ri\":\n        if (\n          !(\n            typeof value === \"string\" &&\n            new RegExp(String(match.value), \"i\").test(value)\n          )\n        )\n          return false;\n        break;\n    }\n  }\n\n  if (and && !matchesQuery(entity, and)) return false;\n\n  return true;\n}\n"]}
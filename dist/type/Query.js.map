{"version":3,"file":"Query.js","sourceRoot":"","sources":["../../src/type/Query.ts"],"names":[],"mappings":"","sourcesContent":["import { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\nimport { StringSelectors } from \"./StringSelectors\";\n\n\nexport type Query<Components extends Component[]> = Partial<{\n  has: StringSelectors<Entity<Components>>[] |\n  StringSelectors<Entity<Components>>;\n  not: StringSelectors<Entity<Components>>[] |\n  StringSelectors<Entity<Components>>;\n  match: {\n    key: StringSelectors<Entity<Components>>;\n    // r = regex, ri = regex ignore case\n    op?: \"==\" | \"ri\" | \"r\" | \"!=\" | \">\" | \"<\" | \">=\" | \"<=\" | \"!\" | \"contains\";\n    value?: string | number | boolean | string[] | number[] | boolean[];\n  };\n  and: Query<Components>;\n  or: Query<Components>;\n}>;\n"]}